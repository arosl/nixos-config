{
  description = "Flake of Andreas";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";

    home-manager.url = "github:nix-community/home-manager";
    home-manager.inputs.nixpkgs.follows = "nixpkgs";

    alejandra.url = "github:kamadorueda/alejandra";
    alejandra.inputs.nixpkgs.follows = "nixpkgs";

    sops-nix.url = "github:Mic92/sops-nix";
    sops-nix.inputs.nixpkgs.follows = "nixpkgs";

    stylix.url = "github:danth/stylix";
    blocklist-hosts = {
      url = "github:StevenBlack/hosts";
      flake = false;
    };
    hyprland-plugins = {
      url = "github:hyprwm/hyprland-plugins";
      flake = false;
    };
  };

  outputs = { self, nixpkgs, home-manager, alejandra, stylix, blocklist-hosts, hyprland-plugins, sops-nix, ... } @ inputs:
    let
      lib = nixpkgs.lib;

      # Function to create NixOS configurations for each host
      createNixosConfig = { host, hostname, wmOverride, ... }:
        lib.nixosSystem {
          inherit (host) system;

          pkgs = nixpkgs.packages.${host.system};

          modules = [
            host.configPath
            {
              environment.systemPackages = [ alejandra.defaultPackage.${host.system} ];
            }
            home-manager.nixosModules.home-manager
            {
              home-manager = {
                useUserPackages = true;
                users.${host.username} = home-manager.lib.homeManagerConfiguration {
                  inherit lib pkgs;
                  modules = [ host.homeConfigPath ];
                  extraSpecialArgs = {
                    inherit (inputs) stylix hyprland-plugins;
                    inherit (host) theme timezone;
                    username = host.username;
                    browser = host.browser;
                    editor = host.editor;
                    email = host.email;
                    font = host.font;
                    fontPkg = host.fontPkg;
                    name = host.name;
                    spawnEditor = host.spawnEditor;
                    term = host.term;
                    wm = wmOverride or host.wm;
                    wmType = host.wmType;
                  };
                };
              };
            }
          ];

          specialArgs = {
            inherit (host) username name timezone locale theme font fontPkg wm sshkey_public;
            inherit (inputs) stylix blocklist-hosts sops-nix;
            hostname = hostname;
          };
        };
    in
    {
      nixosConfigurations = {
        phantom = createNixosConfig {
          host = {
            system = "x86_64-linux";
            configPath = ./hosts/phantom/configuration.nix;
            homeConfigPath = ./users/andreas/home.nix;
            username = "andreas";
            theme = "catppuccin-mocha";
            timezone = "America/Cancun";
            locale = "en_US.UTF-8";
            font = "Intel One Mono";
            fontPkg = nixpkgs.packages.x86_64-linux.intel-one-mono;
            name = "Andreas";
            spawnEditor = "nvim";
            term = "alacritty";
            wm = "hyprland";
            wmType = "wayland";
            sshkey_public = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIK9WYZgphn4uQ5ZqBkTwbSIk2htGe74EiANdItjgWlrM andreas@ros.land";
          };
          hostname = "phantom";
          # You can override or specify other settings here if needed
        };

        hypoxic = createNixosConfig {
          host = {
            system = "x86_64-linux";
            configPath = ./hosts/hypoxic/configuration.nix;
            homeConfigPath = ./users/romy/home.nix;
            username = "romy";
            theme = "catppuccin-mocha";
            timezone = "America/Cancun";
            locale = "en_US.UTF-8";
            font = "Intel One Mono";
            fontPkg = nixpkgs.packages.x86_64-linux.intel-one-mono;
            name = "Romy";
            spawnEditor = "nvim";
            term = "alacritty";
            wm = "gnome";
            wmType = "wayland";
            sshkey_public = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIK9WYZgphn4uQ5ZqBkTwbSIk2htGe74EiANdItjgWlrM romy@ros.land";
          };
          hostname = "hypoxic";
          wmOverride = "gnome"; # Example of overriding window manager
          # Add other overrides as necessary
        };

        # Add more hosts here as needed
      };
    };
}
